# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="/Users/jrwhite/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
# ZSH_THEME="robbyrussell"
ZSH_THEME="powerlevel10k/powerlevel10k"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# Caution: this setting can cause issues with multiline prompts (zsh 5.7.1 and newer seem to work)
# See https://github.com/ohmyzsh/ohmyzsh/issues/5765
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  git-prompt
  zsh-autosuggestions
  )

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

#########################################################
# CUSTOM CONTENTS
#########################################################

# virtualenv stuff
# export WORKON_HOME=$HOME/.virtualenvs   # Optional
# export PROJECT_HOME=$HOME/projects      # Optional

# load ssh-keys
eval "$(ssh-agent -s)"
ssh-add -K ~/.ssh/github


# HOMEBREW
#export PATH=/opt/homebrew/bin:/opt/local/sbin:$PATH
#export PATH=/opt/homebrew/bin:$PATH
#export PATH=$PATH:/opt/homebrew/Cellar/
eval "$(/opt/homebrew/bin/brew shellenv)"

# VSCODE PATH
export PATH=$PATH:"/Applications/Visual Studio Code.app/Contents/Resources/app/bin"

# blockchain development

# MY SCRIPTS AND TOOLS
export PATH=$PATH:/Users/jrwhite/scripts
# export PATH=$PATH:/Users/jrwhite/scripts/expect
# export PATH=$PATH:/Users/jrwhite/androidsdk/platform-tools/
# export PATH=/Users/jrwhite/.local/bin:$PATH

# JAVA
# export JAVA_HOME=/Library/Java/JavaVirtualMachines/zulu-11.jdk/Contents/Home
export JAVA_HOME=$(/usr/libexec/java_home)

#pretty colors
export CLICOLOR=1
export LSCOLORS=Gxfxcxdxbxegedabagacad

#zsh-completion
fpath=(/usr/local/share/zsh-completions $fpath)

#flutter
export PATH=$PATH:/Users/jrwhite/scripts/flutter/bin

#kubernetes
# source <(kubectl completion zsh)

#########################################################################################
###         aliases
#########################################################################################

alias lr='ssh -p 30609 louisvilleriders.com'
alias session="screen -list | grep tty | cut -d "." -f 1"

#Sets primary to wireless
alias wlan='networksetup -switchtolocation work'

#Sets primary to lan
alias lan='networksetup -switchtolocation home'

#alias dcssh='/Users/jrwhite/w/localdev/src/JrwhiteDev/local/scripts/assh -corp $1'

#Bounce DNS cause it's stupid
alias stupid='~/scripts/dnsbounce.sh'

#Release cam bug
alias fixcam='sudo killall VDCAssistant'

alias swaggergen='python -m /Users/jrwhite/mbpworkspace/swaggerUI/swagger-editor/SimpleHTTPServer'
alias sampush='./sam package && ./sam deploy'
alias deletemystack='aws cloudformation delete-stack --stack-name $1'
alias gitreset='git reset --hard && git clean -f -d && git pull'
alias res='system_profiler SPDisplaysDataType | grep Resolution'

# Start local blockchain
alias startganache='ganache-cli -d'

# submit pull/change request
alias cr='gh pr create --title $1 --body $2 --reviewer $3'

#
# OSX only
#
alias getresolution="system_profiler SPDisplaysDataType | awk '/Resolution:/{print $2, $3, $4}'"
alias macspeakers="SwitchAudioSource -s 'MacBook Pro Speakers'"
alias headset="SwitchAudioSource -s 'Arctis Pro Wireless Game'"


# rebase current branch on mainline
sync_branch_with_mainline() {
  current_branch=`git branch | grep '* ' | awk '{print $2}' 2>/dev/null`
  if [ "$current_branch" ] && [ "$current_branch" != "mainline" ]; then
    git checkout mainline && git pull && git checkout - && git rebase mainline
  elif [ "$current_branch" ] && [ "$current_branch" == "mainline" ]; then
    echo "You are on the mainline branch. You need to checkout the branch you wish to rebase with mainline."
  else
    echo "No branch found"
  fi
}


# NVM Packet Manager for Node.js
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

#bash-completion
if [ -f $(brew --prefix)/etc/bash_completion ]; then
    . $(brew --prefix)/etc/bash_completion
  fi

mosh ()
{
    local msh="$(which mosh)"
    if [[ -e "$msh" ]]; then
        # turn on mouse support, ext mouse, SGR ext mouse
 #       printf '\x1b[?1002h\x1b[?1005h\x1b[?1006h'
        perl -E ' print "\e[?1005h\e[?1002h" '
        # pass ssh params to allow krb auth
        $msh --ssh="ssh -o GSSAPITrustDns=no" $@
        # turn mouse mode back off
        #printf '\x1b[?1002l\x1b[?1005l\x1b[?1006l'
        perl -E ' print "\e[?1006l\e[?1002l" '
    else
        ssh $@
    fi
}

add_private_keys () {
    [ -e ~/.ssh/id_rsa ] && ssh-add ~/.ssh/id_rsa
    [ -e ~/.ssh/${USER}-keypair.pem ] && ssh-add ~/.ssh/${USER}-keypair.pem
}

add_private_keys () {
    [ -e ~/.ssh/id_rsa ] && ssh-add ~/.ssh/id_rsa
    [ -e ~/.ssh/${USER}-keypair.pem ] && ssh-add ~/.ssh/${USER}-keypair.pem
}

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/opt/homebrew/Caskroom/miniconda/base/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/opt/homebrew/Caskroom/miniconda/base/etc/profile.d/conda.sh" ]; then
        . "/opt/homebrew/Caskroom/miniconda/base/etc/profile.d/conda.sh"
    else
        export PATH="/opt/homebrew/Caskroom/miniconda/base/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/jrwhite/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/jrwhite/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/jrwhite/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/jrwhite/google-cloud-sdk/completion.zsh.inc'; fi

autoload -U +X bashcompinit && bashcompinit
complete -o nospace -C /opt/homebrew/bin/terraform terraform
